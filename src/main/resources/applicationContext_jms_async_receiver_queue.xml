<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
	
	<description>（异步接收消息）jms 消息发接收 配置（含点对点模式（queue消息））</description>
	
	<!--创建连接池-->
	<bean id="jmsReceiverFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616"/>	<!-- 连接服务的用户名密码使用默认密码，可通过设置userName和password属性设置 -->
				<property name="useAsyncSend" value="true"/>				<!-- 异步发送 -->
			</bean>
		</property>
		<property name="maxConnections" value="100"/>
	</bean>
	
	
	<!-- #####################	点对点模式消息（queue）	##################### -->
	
	<!-- 方式2：（推荐使用监听异步处理消息）异步式处理消息，自己通过注入自定义的消息处理监听器来异步消费处理消息 -->
	<bean id="receiveQueueMsg" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
	  	<property name="connectionFactory" ref="jmsReceiverFactory"></property>
	  	<property name="destinationName" value="lx.spring.queue"></property>
	  	<property name="sessionAcknowledgeMode" value="1"></property>
	  	<property name="pubSubDomain" value="false"></property>
	  	<property name="subscriptionDurable" value="true"></property>
	  	<property name="messageListener" ref="messageListener"></property>
	  	<property name="clientId" value="client_spring_queue"></property>
	</bean>
	
	
	<!-- #####################	（自定义消息转换器、自定义异步接收处理消息监听器）	##################### -->
	
	<!-- 异步接受消息————消息监听器 -->
	<bean id="messageListener" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">  
        <property name="delegate" ref="delegate"></property>
        <property name="defaultListenerMethod" value="onMessage"></property>
        <property name="messageConverter" ref="jmsConverter"></property>
    </bean>
    
    <!-- 消息处理 -->
    <bean id="delegate" class="com.lx.jms.activemq.listener.ConsumerMessageListener"></bean>
    
	<!-- 消息转换器 -->
    <bean id="jmsConverter" class="com.lx.jms.activemq.convert.CustomJmsConverter"></bean>
	<!-- spring 内置默认的消息转换器，在未在jmsTemplate中注册自定义的messageConverter时，jmsTemplate内置默认使用SimpleMessageConverter作为消息转换器；
    	支持转换处理的消息类型： TextMessage、BytesMessage、MapMessage、MapMessage、ObjectMessage（转换的对象需要实现Serializable）
	<bean id="defaultMessageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter"></bean> -->
</beans>
