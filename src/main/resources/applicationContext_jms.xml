<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">
		
	<!--创建连接池-->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616"/>
				<property name="useAsyncSend" value="true"/>	<!-- 异步发送 -->
				<property name="clientIDPrefix" value="client_"/>	<!-- clientIDPrefix：指定了consumer的clientID的前缀，符合此前缀规则的consumer将成为该TOPIC的持久订阅者。 -->
			</bean>
		</property>
		<property name="maxConnections" value="100"/>
	</bean>
	
	<!-- 声明ActiveMQ消息目标,目标可以是一个队列ActiveMQQueue，也可以是一个主题ActiveMQTopic；
		1）、点对点模式消息（queue），构造参数lx.spring.queue2为 队列消息（点对点模式）队列服务名称 -->
	<bean id="destQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="lx.spring.queue2"/>
	</bean>
	
	<bean id="queueJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="defaultDestination" ref="destQueue"/>
		<property name="deliveryMode" value="2"/>		<!-- 1：不持久化；2：持久化 -->
		<property name="pubSubDomain" value="false"/>	<!-- 区别它采用的模式为false是p2p为true是订阅 -->
	</bean>

	<!-- 2）、订阅-发布模式消息（topic），构造参数lx.spring.topic2为 topic消息（订阅发布模式）队列服务名称 -->
	<bean id="destTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg index="0" value="lx.spring.topic2"/>
	</bean>
	
	<bean id="topicJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="defaultDestination" ref="destTopic"/>
		<property name="deliveryMode" value="2"/>		<!-- 1：不持久化；2：持久化 -->
		<property name="pubSubDomain" value="true"/>	<!-- 区别它采用的模式为false是p2p为true是订阅 -->
	</bean>
	
	<!-- 消息发送方: 配置connectionFactory
		在消息发送时，需要为消息发送方配置一个clientIDPrefix的一个属性，该属性来表示那个消费者可以获得此消息，配置文件如下: -->
	<!-- 
	<bean id="jmsSenderFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
	  	<property name="connectionFactory">
	    	<bean class="org.apache.activemq.ActiveMQConnectionFactory">
	      		<property name="brokerURL" value="${jms.sendBrokerURL}"></property>
		      	<property name="useAsyncSend" value="true"></property>
		      	clinetIDPrefix属性
		      	<property name="clientIDPrefix" value="${jms.senderClientIDPrefix)"></property>
	   		</bean>
	  	</property>
	  	<property name="maxConnections" value="100"></property>
	</bean> -->
	<!-- clientIDPrefix：指定了consumer的clientID的前缀，符合此前缀规则的consumer将成为该TOPIC的持久订阅者。 -->
	
	<!-- 消息接收者 -->
	<!--异步调用消息 http://www.tuicool.com/articles/imiuia -->
	<!-- 
	<bean id="receive" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
	  	<property name="connectionFactory" ref="jmsReceiverFactory"></property>
	  	<property name="destinationName" value="${jms.receiveDestinationName}"></property>
	  	<property name="messageListener" ref="messageListener"></property>
	  	<property name="sessionAcknowledgeMode" value="1"></property>
	  	<property name="subscriptionDurable" value="true"></property>
	  	<property name="pubSubDomain" value="true"></property>
	  	<property name="clientId" value="${jms.receiverClientId}"></property>
	  	<property name="durableSubscriptionName" value="${jms.receiverClientId}"></property>
	</bean>
	 -->
</beans>
